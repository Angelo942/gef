name: CI Test for GEF

on:
  push:
    branches:
      - master
      - dev

  pull_request:
    branches:
      - master
      - dev

jobs:
  build:
    name: "Run Unit tests"
    runs-on: [ubuntu-20.04]
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2

    - name: Refresh environment
      run: |
        sudo apt-get update
        sudo apt-get install -y gdb-multiarch python3-dev python3-pip python3-wheel python3-setuptools git cmake gcc g++ pkg-config libglib2.0-dev
        sudo python3 -m pip install --upgrade pip

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache trinity libs
      uses: actions/cache@v2
      id: cache-libs
      env:
        cache-name: cache-trinity-libs-and-python-modules
      with:
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        path: |
          ${{ steps.pip-cache.outputs.dir }}
          ~/.cache/pip
        restore-keys:
          ${{ runner.os }}-pip-${{ env.cache-name }}-
          ${{ runner.os }}-pip-
          ${{ runner.os }}-${{ env.cache-name }}-
          ${{ runner.os }}-

    - name: Compile Capstone/Keystone/Unicorn and install Python modules
      if: steps.cache-libs.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/.cache/pip || echo ok
        python3 -c 'import capstone, keystone, unicorn' || python3 -m pip install --user --upgrade -r ./requirements.txt

    - name: Setup GEF
      run: |
        echo "source $(pwd)/gef.py" > ~/.gdbinit
        gdb -q -ex 'gef missing' -ex 'gef help' -ex 'gef config' -ex start -ex continue -ex quit /bin/pwd

    - name: Run linter
      run: |
        make lint

    - name: Run Tests
      run: |
        make test
